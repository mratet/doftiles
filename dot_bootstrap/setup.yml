---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.apt:
        name:
          - git
          - htop
          - vim
          - firefox
          - gh
          - gcc
          - helm
          - poetry
          - zsh
          - fzf
          - tmux
          - ffmpeg-free
          - zlib
          - make
          - patch
          - bzip2
          - sqlite
          - fd-find
          - autoconf
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Add Visual Studio Code Repo
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true
        enabled: true

    - name: Install VS Code
      ansible.builtin.dnf:
        name: code
        state: present

    - name: Add Docker repo
      ansible.builtin.apt_repository:
        name: docker
        description: Docker repo
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        gpgkey: "https://download.docker.com/linux/ubuntu/gpg"
        gpgcheck: true
        enabled: true

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

    - name: Add kubectl repo
      ansible.builtin.apt_repository:
        name: Kubernetes
        description: Kubernetes repo
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        gpgkey: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        gpgcheck: true
        enabled: true

    - name: Install kubectl
      ansible.builtin.apt:
        name: kubectl
        state: present

    - name: Install Flatpak packages
      community.general.flatpak:
        name:
          - org.videolan.VLC
          - md.obsidian.Obsidian
          - rest.insomnia.Insomnia
          - com.github.johnfactotum.Foliate
        state: present

    - name: Install Flatpak packages from Flathub
      community.general.flatpak:
        name:
#        - com.jetbrains.PyCharm-Professional
        - io.freetubeapp.FreeTube
        - com.discordapp.Discord
#        - org.zotero.Zotero
#        - com.valvesoftware.Steam
        state: present
        remote: flathub

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Download PyCharm
      ansible.builtin.get_url:
        url: "https://download.jetbrains.com/python/pycharm-professional-2023.3.2.tar.gz"
        dest: "/tmp/pycharm.tar.gz"

    - name: Extract PyCharm
      ansible.builtin.unarchive:
        src: "/tmp/pycharm.tar.gz"
        dest: "/opt/"
        remote_src: yes

    - name: Create a symbolic link
      ansible.builtin.file:
        src: "/opt/pycharm-professional-2023.3.2/bin/pycharm.sh"
        dest: "/usr/local/bin/pycharm"
        state: link

    - name: Download Zotero tarball
      ansible.builtin.get_url:
        url: "https://download.zotero.org/standalone/6.0.30/Zotero-6.0.30_linux-x86_64.tar.bz2"
        dest: "/tmp/Zotero.tar.bz2"

    - name: Extract Zotero tarball
      ansible.builtin.unarchive:
        src: "/tmp/Zotero.tar.bz2"
        dest: "/opt/"
        remote_src: yes
        creates: "/opt/Zotero"

    - name: Create symbolic link
      ansible.builtin.file:
        src: "/opt/Zotero/zotero"
        dest: "/usr/local/bin/zotero"
        state: link

    - name: Download Steam installer
      ansible.builtin.get_url:
        url: "https://steamcdn-a.akamaihd.net/client/installer/steam.deb"
        dest: "/tmp/steam.deb"

    - name: Install Steam
      ansible.builtin.apt:
        deb: "/tmp/steam.deb"
        state: present
        update_cache: yes

    - name: Remove downloaded Steam installer
      ansible.builtin.file:
        path: "/tmp/steam.deb"
        state: absent

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"

